# vi:syntax=sh

WORKON_HOME="$HOME/pyenv"
PATH=$HOME/bin:$PATH

if [ -d /opt/google_appengine ]; then
  PATH="$PATH:/opt/google_appengine"
fi

if [ -d $HOME/.deno/bin ]; then
  PATH="$PATH:$HOME/.deno/bin"
fi

export EDITOR=nvim
export PATH
export WORKON_HOME

# load nvm if available
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# load python virtualenv wrapper if available
hash virtualenvwrapper_lazy.sh 2>/dev/null && source "$(which virtualenvwrapper_lazy.sh)"
#
# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/cezar/apps/google-cloud-sdk/path.bash.inc' ]; then source '/home/cezar/apps/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/cezar/apps/google-cloud-sdk/completion.bash.inc' ]; then source '/home/cezar/apps/google-cloud-sdk/completion.bash.inc'; fi

# do nothing more if not in interactive prompt
[ -z "$PS1" ] && return

# ----------------------------------------
#  ALIASES
# ----------------------------------------

alias ls='ls --color=auto'
alias ll='ls -alh'
alias ktl='kubectl'
alias assume="source assume"

# ----------------------------------------
#  PROMPT
# ----------------------------------------

eval "$(starship init bash)"

# ----------------------------------------
#  BASH CONFIG
# ----------------------------------------

HISTCONTROL=ignoredups:ignorespace # don't put duplicate lines in the history.
shopt -s histappend # append to the history file, don't overwrite it
HISTSIZE=500
HISTFILESIZE=1000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# dir colors
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi


